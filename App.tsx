import 'react-native-gesture-handler';
import {StyleSheet, Alert} from 'react-native';
import React, {useEffect, useRef, useState, useContext} from 'react';

import {UserProvider} from './UserContext';
import AppNavigator from './AppNavigator';
import {initDB} from './src/database';
import AsyncStorage from '@react-native-async-storage/async-storage';
import {syncDataFromServer, syncPendingRequests} from './src/sync';
import {NetworkProvider, NetworkContext} from './src/components/NetworkContext';

function AppContent() {
  const {isConnected} = useContext(NetworkContext);
  const [userId, setUserId] = useState<string | null>(null);
  const wasOfflineRef = useRef(false);
  const hasSyncedOnceRef = useRef(false); // üëà —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–≤—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –∏ userId
  useEffect(() => {
    const init = async () => {
      await initDB();
      const storedUserId = await AsyncStorage.getItem('userId');
      if (storedUserId) {
        setUserId(storedUserId);
      }
    };
    init();
  }, []);

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –∏ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
  useEffect(() => {
    if (!userId) return;

    if (!isConnected) {
      if (!wasOfflineRef.current) {
        Alert.alert('–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞', '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ—Ñ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–µ');
        wasOfflineRef.current = true;
      }
    } else {
      // –ï—Å–ª–∏ –¥–æ —ç—Ç–æ–≥–æ –±—ã–ª –æ—Ñ—Ñ–ª–∞–π–Ω –∏–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
      if (wasOfflineRef.current || !hasSyncedOnceRef.current) {
        wasOfflineRef.current = false;
        hasSyncedOnceRef.current = true;

        Alert.alert('–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω', '–í—ã–ø–æ–ª–Ω–µ–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è');
        syncDataFromServer();
        syncPendingRequests();
      }
    }
  }, [isConnected, userId]);

  return (
    <UserProvider>
      <AppNavigator />
    </UserProvider>
  );
}

export default function App() {
  return (
    <NetworkProvider>
      <AppContent />
    </NetworkProvider>
  );
}

const styles = StyleSheet.create({
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
});
